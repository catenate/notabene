nb _roadmap article link
http://www.childrenslibrary.org/icdl/BookPage?bookid=crababy_00150086&pnum1=30&twoPage=false&route=simple_84,345_0_0_English_11&size=0&fullscreen=false&lang=English&ilang=English
http://sandofsky.com/blog/git-workflow.html
http://gizmodo.com/5826291/
http://www.motorola.com/Consumers/US-EN/Consumer-Product-and-Services/Mobile-Phones/MOTOROLA-PHOTON-4G-US-EN
http://www.facebook.com/media/set/?set=a.10150386112651959.431667.609561958&type=1
https://github.com/dleslie/scheme-cpp-build
http://code.google.com/p/gyp/wiki/GypVsCMake
http://neugierig.org/software/chromium/notes/2011/02/ninja.html
http://elffetish.com/names.html
http://groups.google.com/group/golang-nuts/browse_thread/thread/80c0968c0d7fcbbc
http://groups.google.com/group/golang-nuts/browse_thread/thread/8e85b3c8d4acbd58
http://agile.techwell.com/blogs/agile-testing-lisa-crispin/clean-coder-tester
http://polyglotprogramming.com/papers
http://list.cs.brown.edu/pipermail/cs273/2009q4/000007.html
http://www.reddit.com/r/haskell/comments/j51yw/library_of_conditional_oneliners_and_combinators/
http://gizmodo.com/5826347/these-beautiful-photos-of-2010s-dubai-look-like-1930s-science-fiction/gallery/1
http://conal.net/blog/posts/is-haskell-a-purely-functional-language
http://www.georgesaines.com/?p=484


nb rapid develop verify prove correct high frequency trade program language perform latency haskell clang c++
Ramel, D. 20110729.  When milliseconds make millions: Why Wall Street
programmers earn the big bucks.  Application development trends.
http://adtmag.com/articles/2011/07/29/why-hft-programmers-earn-top-salaries.aspx


nb resume hire manager review
Lopp, M.  20070225.  A glimpse and a hook: You've got 30 seconds.
Rands in repose: Tech life.
http://www.randsinrepose.com/archives/2007/02/25/a_glimpse_and_a_hook.html


nb complex desktop macosx flow zone apple mission control natural scroll full screen distract create
Lopp, M.  20110731.  The one rule: Distractions can damage creativity.
Rands in repose: Apple.
http://www.randsinrepose.com/archives/2011/07/31/the_one_rule.html


nb bore employee quit interest problem experiment investigate explore urgent grunt work 
Lopp, M.  20110712.  Bored people quit: Their productivity is your
productivity.  Rands in repose: Management.
http://www.randsinrepose.com/archives/2011/07/12/bored_people_quit.html

What was “I’m bored” grew roots and became “I’m bored and why isn’t
anyone doing anything about it?” and sprouted “I’m bored, I told my
boss, and he… did nothing,” and finally bloomed into “I don’t want to
work at a place where they don’t care if I’m bored.” I think of boredom
as a clock.  Every second that someone on my team is bored, a second
passes on this clock.  After some aggregated amount of seconds that
varies for every person, they look at the time, throw up their arms,
and quit.

Whether someone is bored or not, you always need to be able to answer two
questions regarding each person on your team: (1) Where are they going?
(2) What are you currently doing to get them there?  Keep an interesting
problem squarely in front of them.  If there is no project on their plate
that you know is engaging them, create time for them to explore whatever
they want to obsess about.  “My job isn’t just building product; I also
build people.” They can only ‘take one for the team’ for so long.
Get this urgent, unplanned task done or make progress on the
unmeasurable?: A terrific way to accelerate the boredom clock is a
promise of productive and creative time that is then taken away.
Productivity costs surrounding micro-tasks [random meetings, phone
calls, interviews] aren’t just the 30 minutes necessary to get them
done, it’s the context-switching tax involved in stopping their work,
preparing for the task, doing the task, and then rebuilding the context
regarding the work that floats their boat.  Progress is not measured in
interrupt-driven minutes, it’s blocks of delicious, uninterrupted hours.
In terms of a low-cost means of keeping your team content, the simple
act of saying, “I know where you want to be and I’m thinking about how
to get you there” is a way to demonstrate you care about the growth of
your team.  Each week that passes where you don’t share the joy, despair,
and discovery of software development is a week when you slowly forget
what it means to be a software developer.
