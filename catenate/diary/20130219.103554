nb python bytecode term glossary
Python software foundation.  20130219.  bytecode.
Python documentation: Glossary.
http://docs.python.org/2.7/glossary.html#term-bytecode

Python source code is compiled into bytecode, the internal
representation of a Python program in the CPython interpreter.
The bytecode is also cached in .pyc and .pyo files so that executing
the same file is faster the second time (recompilation from source to
bytecode can be avoided).  This “intermediate language” is said to run
on a virtual machine that executes the machine code corresponding to
each bytecode.  Do note that bytecodes are not expected to work
between different Python virtual machines, nor to be stable between
Python releases.

A list of bytecode instructions can be found in the documentation for
the dis module.


nb serial object persist data marshal module standard library python
Python software foundation.  20130219.  marshal—Internal Python
object serialization.  Python standard library: Data persistence.
http://docs.python.org/2.7/library/marshal.html

This module contains functions that can read and write Python values
in a binary format.  The format is specific to Python, but independent
of machine architecture issues (e.g., you can write a Python value to
a file on a PC, transport the file to a Sun, and read it back there).
Details of the format are undocumented on purpose; it may change
between Python versions (although it rarely does).


nb compiled python file
Python software foundation.  “Compiled” Python files.
Tutorial: Standard modules.
http://docs.python.org/release/1.5.1p1/tut/node43.html

The contents of the "spam.pyc" file is platform independent, so a
Python module directory can be shared by machines of different
architectures.


nb pyc file format machine architecture independent python version
Batchelder, N.  20080409.  The structure of .pyc files.  Ned Batchelder.
http://nedbatchelder.com/blog/200804/the_structure_of_pyc_files.html

The nature of marshalling gives us the important characteristics of
.pyc files: they are independent of platform, but very sensitive to
Python versions.  A 2.4 .pyc file will not execute under 2.5, but it
can be copied from one operating system to another just fine.


nb pyc file format header magic number python version timestamp generate marshal module code object global data
Golovinsky, E.  20080125.  Digging into Python’s PYC files.
Gooli.org: On software development and related issues.

The point was to figure out what PYC files look inside and we did that,
at least in part—they start with a magic number that is different for
each Python version (check out the comments in import.c), and they
have an embedded timestamp of the source code they got generated from
after that.  The rest is generated by the marshal module and can be
read by it to get the code objects and the global data in the module.
http://www.gooli.org/blog/digging-into-pythons-pyc-files/
